{"version":3,"sources":["features/car/carSlice.jsx","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burgerStatus","setBurgerStatus","useSelector","console","log","Container","src","alt","map","index","href","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","Menu","MenuIcon","props","CloseIcon","Section","title","description","leftBtnText","rightBtnText","backgroundImg","Wrap","bgImage","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35292619.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n\tcars: ['Model S', 'Model 3', 'Model X', 'Model Y'],\n}\n\nconst carSlice = createSlice({\n\tname: 'car',\n\tinitialState,\n\treducers: {},\n})\n\nexport const selectCars = (state) => state.car.cars\n\nexport default carSlice.reducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n// import MenuIcon from '@mui/icons-material/Menu'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { selectCars } from '../features/car/carSlice'\nimport { useSelector } from 'react-redux'\n\nfunction Header() {\n\tconst [burgerStatus, setBurgerStatus] = useState(false)\n\tconst cars = useSelector(selectCars)\n\tconsole.log(cars)\n\n\treturn (\n\t\t<Container>\n\t\t\t<a>\n\t\t\t\t<img src='/images/logo.svg' alt='' />\n\t\t\t</a>\n\t\t\t<Menu>\n\t\t\t\t{cars &&\n\t\t\t\t\tcars.map((car, index) => (\n\t\t\t\t\t\t<a key={index} href='#'>\n\t\t\t\t\t\t\t{car}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t))}\n\t\t\t</Menu>\n\n\t\t\t<RightMenu>\n\t\t\t\t<a href='#'>Shop</a>\n\t\t\t\t<a href='#'>Tesla Account</a>\n\t\t\t\t<CustomMenu onClick={() => setBurgerStatus(true)} />\n\t\t\t</RightMenu>\n\n\t\t\t<BurgerNav show={burgerStatus}>\n\t\t\t\t<CloseWrapper>\n\t\t\t\t\t<CustomClose onClick={() => setBurgerStatus(false)} />\n\t\t\t\t</CloseWrapper>\n\n\t\t\t\t{cars &&\n\t\t\t\t\tcars.map((car, index) => (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a key={index} href='#'>\n\t\t\t\t\t\t\t\t{car}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href='#'>Exiting Inventory</a>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href='#'>Used Inventory</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href='#'>Trade-in</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href='#'>Cybertruck</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href='#'>Roadaster</a>\n\t\t\t\t</li>\n\t\t\t</BurgerNav>\n\t\t</Container>\n\t)\n}\n\nexport default Header\n\nconst Container = styled.div`\n\tmin-height: 60px;\n\tposition: fixed;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tpadding: 0 20px;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tz-index: 1;\n`\n\nconst Menu = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex: 1;\n\n\ta {\n\t\tfont-weight: 600;\n\t\ttext-transform: uppercase;\n\t\tpadding: 0 10px;\n\t\tflex-wrap: nowrap;\n\t}\n\n\t@media (max-width: 768px) {\n\t\tdisplay: none;\n\t}\n`\nconst RightMenu = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\ta {\n\t\tfont-weight: 600;\n\t\ttext-transform: uppercase;\n\t\tmargin-right: 10px;\n\t\tflex-wrap: nowrap;\n\t}\n`\n\nconst CustomMenu = styled(MenuIcon)`\n\tcursor: pointer;\n`\n\nconst BurgerNav = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tbottom: 0;\n\tright: 0;\n\tbackground: white;\n\twidth: 300px;\n\tz-index: 16;\n\tlist-style: none;\n\tpadding: 20px;\n\tdisplay: flex;\n\tflex-direction: column;\n\ttext-align: start;\n\ttransform: ${(props) => (props.show ? 'translateX(0)' : 'translateX(100%)')};\n\ttransition: transform 0.2s;\n\tli {\n\t\tpadding: 15px 0;\n\t\tborder-bottom: 1px solid rgba(0, 0, 0, 0.2);\n\n\t\ta {\n\t\t\tfont-weight: 600;\n\t\t}\n\t}\n`\n\nconst CustomClose = styled(CloseIcon)`\n\tcursor: pointer;\n`\n\nconst CloseWrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport Fade from 'react-reveal/Fade'\nimport Zoom from 'react-reveal/Zoom'\n\nfunction Section({\n\ttitle,\n\tdescription,\n\tleftBtnText,\n\trightBtnText,\n\tbackgroundImg,\n}) {\n\t// console.log(props)\n\treturn (\n\t\t<Wrap bgImage={backgroundImg}>\n\t\t\t<Fade bottom>\n\t\t\t\t<ItemText>\n\t\t\t\t\t<h1>{title}</h1>\n\t\t\t\t\t<p>{description}</p>\n\t\t\t\t</ItemText>\n\t\t\t</Fade>\n\n\t\t\t<Buttons></Buttons>\n\t\t\t<ButtonGroup>\n\t\t\t\t<LeftButton>{leftBtnText}</LeftButton>\n\t\t\t\t{rightBtnText && <RightButton>{rightBtnText}</RightButton>}\n\t\t\t</ButtonGroup>\n\t\t\t<DownArrow src='/images/down-arrow.svg' />\n\t\t</Wrap>\n\t)\n}\n\nexport default Section\n\nconst Wrap = styled.div`\n\twidth: 100vw;\n\theight: 100vh;\n\tbackground-size: cover;\n\tbackground-position: center;\n\tbackground-repeat: no-repeat;\n\tbackground-image: url('/images/model-s.jpg');\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\t/* // vertical alignment */\n\talign-items: center;\n\t/* // horizontal alignment */\n\tbackground-image: ${(props) => `url(\"/images/${props.bgImage}\")`};\n`\n\nconst ItemText = styled.div`\n\tpadding-top: 15vh;\n\ttext-align: center;\n`\n\nconst ButtonGroup = styled.div`\n\tdisplay: flex;\n\tmargin-bottom: 30px;\n\t@media (max-width: 768px) {\n\t\tflex-direction: column;\n\t}\n`\n\nconst LeftButton = styled.div`\n\tbackground-color: rgba(23, 26, 32, 0.8);\n\theight: 40px;\n\twidth: 256px;\n\tcolor: white;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 100px;\n\topacity: 0.8;\n\ttext-transform: uppercase;\n\tfont-size: 12px;\n\tcursor: pointer;\n\tmargin: 8px;\n`\n\nconst RightButton = styled(LeftButton)`\n\tbackground: white;\n\topacity: 0.65;\n\tcolor: black;\n`\n\nconst DownArrow = styled.img`\n\theight: 40px;\n\toverflow-x: hidden;\n\tanimation: animateDown infinite 1.5;\n`\n\nconst Buttons = styled.div``\n","import React from 'react'\nimport styled from 'styled-components'\nimport Section from './Section'\n\nfunction Home() {\n\treturn (\n\t\t<Container>\n\t\t\t<Section\n\t\t\t\ttitle='Model S'\n\t\t\t\tdescription='Order Online for Touchless delivery'\n\t\t\t\tbackgroundImg='model-s.jpg'\n\t\t\t\tleftBtnText='Custom order'\n\t\t\t\trightBtnText='Existing inventory'\n\t\t\t/>\n\t\t\t<Section\n\t\t\t\ttitle='Model Y'\n\t\t\t\tdescription='Order Online for Touchless delivery'\n\t\t\t\tbackgroundImg='model-y.jpg'\n\t\t\t\tleftBtnText='Custom order'\n\t\t\t\trightBtnText='Existing inventory'\n\t\t\t/>\n\t\t\t<Section\n\t\t\t\ttitle='Model 3'\n\t\t\t\tdescription='Order Online for Touchless delivery'\n\t\t\t\tbackgroundImg='model-3.jpg'\n\t\t\t\tleftBtnText='Custom order'\n\t\t\t\trightBtnText='Existing inventory'\n\t\t\t/>\n\t\t\t<Section\n\t\t\t\ttitle='Model X'\n\t\t\t\tdescription='Order Online for Touchless delivery'\n\t\t\t\tbackgroundImg='model-x.jpg'\n\t\t\t\tleftBtnText='Custom order'\n\t\t\t\trightBtnText='Existing inventory'\n\t\t\t/>\n\t\t\t<Section\n\t\t\t\ttitle='Lowest Cost Solar Panels in America'\n\t\t\t\tdescription='Money-back guarantee'\n\t\t\t\tbackgroundImg='solar-panel.jpg'\n\t\t\t\tleftBtnText='Order now'\n\t\t\t\trightBtnText='Learn more'\n\t\t\t/>\n\t\t\t<Section\n\t\t\t\ttitle='Solar for New Roofs'\n\t\t\t\tdescription='Solar Roof Cost Less Than a New Roof'\n\t\t\t\tbackgroundImg='solar-panel.jpg'\n\t\t\t\tleftBtnText='Order now'\n\t\t\t\trightBtnText='Learn more'\n\t\t\t/>\n\t\t\t<Section\n\t\t\t\ttitle='Accessories'\n\t\t\t\tdescription='Solar Roof Cost Less Than a New Roof'\n\t\t\t\tbackgroundImg='accessories.jpg'\n\t\t\t\tleftBtnText='Shop now'\n\t\t\t/>\n\t\t</Container>\n\t)\n}\n\nexport default Home\n\nconst Container = styled.div`\n\theight: 100vh;\n`\n","import React from 'react'\nimport './App.css'\nimport Header from './components/Header'\nimport Home from './components/Home'\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header />\n\t\t\t<Home />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport carReducer from '../features/car/carSlice'\n\nexport const store = configureStore({\n\treducer: {\n\t\tcar: carReducer,\n\t},\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}